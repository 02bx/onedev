target(default:"prepare to package the product") {
	File buildDir = new File("${buildDirectory}")
	File sandboxDir = new File(buildDir, "sandbox")
	
	File jswLoc = new File("${jswPath}")
	if (jswLoc.isFile()) {
		File extractTo = new File(buildDir, "jsw")
		unzip(src: jswLoc, dest: extractTo)
		jswLoc = extractTo
	}
	
	File binDir = new File(sandboxDir, "bin")			
	copy(todir: binDir) {
		fileset(dir: jswLoc.absolutePath + "/bin", includes: "wrapper-*")
		fileset(dir: jswLoc.absolutePath + "/lib", includes: "libwrapper-*, *.dll, wrapper.jar")
	}
	copy(tofile: binDir.absolutePath + "/server.bat", file: jswLoc.absolutePath + "/src/bin/AppCommand.bat.in")
	
	filterset(id: "appFilterSet") {
		filter(token: "app.name", value: "${productId}")
		filter(token: "app.long.name", value: "${productName}")
		filter(token: "app.description", value: "${productName}")
		filter(token: "app.class", value: "${bootstrapClass}")
	}
	copy(tofile: binDir.absolutePath + "/server.sh", file: jswLoc.absolutePath + "/src/bin/sh.script.in") {
		filterset(refid: "appFilterSet")
	}	
	copy(tofile: sandboxDir.absolutePath + "/conf/wrapper.conf", file: jswLoc.absolutePath + "/wrapper.conf") {
		filterset(refid: "appFilterSet")
	}	
}		