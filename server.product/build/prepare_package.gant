target(default:"prepare to package the product") {
	File buildDir = new File("${buildDirectory}")
	File sandboxDir = new File(buildDir, "sandbox")
	
	File jswLoc = new File("${jswPath}")
	if (jswLoc.isFile()) {
		File extractTo = new File(buildDir, "jsw")
		unzip(src: jswLoc, dest: extractTo)
		jswLoc = extractTo
	}
	
	File binDir = new File(sandboxDir, "bin")
	File bootDir = new File(sandboxDir, "boot")			
	copy(todir: bootDir) {
		fileset(dir: jswLoc.absolutePath + "/bin", includes: "wrapper-*")
		fileset(dir: jswLoc.absolutePath + "/lib", includes: "libwrapper-*, *.dll, wrapper.jar")
	}
	
	filterset(id: "appFilterSet") {
		filter(token: "app.name", value: "${productName}")
		filter(token: "app.long.name", value: "${productDescription}")
		filter(token: "app.description", value: "${productDescription}")
		filter(token: "app.class", value: "${bootstrapClass}")
	}
	filterset(id: "batchCommandCommonFilterSet") {
		filter(token: "set_fixed_command", value: "set _FIXED_COMMAND=console")
	}
	filterset(id: "shellScriptCommonFilterSet") {
		filter(token: "set_fixed_command", value: "FIXED_COMMAND=console")
		filter(token: "set_pass_through", value: "PASS_THROUGH=true")
	}
	
	copy(tofile: binDir.absolutePath + "/server.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset() {
			filter(token: "set_fixed_command", value: "")
			filter(token: "properties_and_parameters", value: "wrapper.pidfile=../status/${productName}.pid")
		}
	}
	copy(tofile: binDir.absolutePath + "/restore.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"${productDescription} Restore\" wrapper.pidfile=${productName}_restore.pid wrapper.name=${productName}_restore wrapper.displayname=\"${productDescription} Restore\" wrapper.description=\"${productDescription} Restore\" -- restore")
		}
	}
	copy(tofile: binDir.absolutePath + "/backup.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"${productDescription} Backup\" wrapper.pidfile=${productName}_backup.pid wrapper.name=${productName}_backup wrapper.displayname=\"${productDescription} Backup\" wrapper.description=\"${productDescription} Backup\" -- backup")
		}
	}
	copy(tofile: binDir.absolutePath + "/upgrade.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"${productDescription} Upgrade\" wrapper.pidfile=${productName}_upgrade.pid wrapper.name=${productName}_upgrade wrapper.displayname=\"${productDescription} Upgrade\" wrapper.description=\"${productDescription} Upgrade\" -- upgrade")
		}
	}
	copy(tofile: binDir.absolutePath + "/apply_db_constraints.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"${productDescription} Apply DB Constraints\" wrapper.pidfile=${productName}_apply_db_constraints.pid wrapper.name=${productName}_apply_db_constraints wrapper.displayname=\"${productDescription} Apply DB Constraints\" wrapper.description=\"${productDescription} Apply DB Constraints\" -- apply_db_constraints")
		}
	}
	copy(tofile: binDir.absolutePath + "/reset_admin_password.bat", file: jswLoc.absolutePath + "/customization/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"${productDescription} Reset Admin Password\" wrapper.pidfile=${productName}_reset_admin_password.pid wrapper.name=${productName}_reset_admin_password wrapper.displayname=\"${productDescription} Reset Admin Password\" wrapper.description=\"${productDescription} Reset Admin Password\" -- reset_admin_password")
		}
	}
	
	copy(tofile: binDir.absolutePath + "/server.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset(refid: "appFilterSet")
		filterset() {
			filter(token: "set_fixed_command", value: "")
			filter(token: "set_pass_through", value: "")
			filter(token: "properties_and_parameters", value: "--")
		}
	}	
	copy(tofile: binDir.absolutePath + "/restore.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "${productName}_restore")
			filter(token: "app.long.name", value: "${productDescription} Restore")
			filter(token: "app.description", value: "${productDescription} Restore")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='${productDescription} Restore' wrapper.name=${productName}_restore wrapper.displayname='${productDescription} Restore' wrapper.description='${productDescription} Restore' -- restore")
		}
	}	
	copy(tofile: binDir.absolutePath + "/backup.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "${productName}_backup")
			filter(token: "app.long.name", value: "${productDescription} Backup")
			filter(token: "app.description", value: "${productDescription} Backup")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='${productDescription} Backup' wrapper.name=${productName}_backup wrapper.displayname='${productDescription} Backup' wrapper.description='${productDescription} Backup' -- backup")
		}
	}	
	copy(tofile: binDir.absolutePath + "/upgrade.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "${productName}_upgrade")
			filter(token: "app.long.name", value: "${productDescription} Upgrade")
			filter(token: "app.description", value: "${productDescription} Upgrade")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='${productDescription} Upgrade' wrapper.name=${productName}_upgrade wrapper.displayname='${productDescription} Upgrade' wrapper.description='${productDescription} Upgrade' -- upgrade")
		}
	}	
	copy(tofile: binDir.absolutePath + "/apply_db_constraints.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "${productName}_apply_db_constraints")
			filter(token: "app.long.name", value: "${productDescription} Apply DB Constraints")
			filter(token: "app.description", value: "${productDescription} Apply DB Constraints")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='${productDescription} Apply DB Constraints' wrapper.name=${productName}_apply_db_constraints wrapper.displayname='${productDescription} Apply DB Constraints' wrapper.description='${productDescription} Apply DB Constraints' -- apply_db_constraints")
		}
	}	
	copy(tofile: binDir.absolutePath + "/reset_admin_password.sh", file: jswLoc.absolutePath + "/customization/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "${productName}_reset_admin_password")
			filter(token: "app.long.name", value: "${productDescription} Reset Admin Password")
			filter(token: "app.description", value: "${productDescription} Reset Admin Password")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='${productDescription} Reset Admin Password' wrapper.name=${productName}_reset_admin_password wrapper.displayname='${productDescription} Reset Admin Password' wrapper.description='${productDescription} Reset Admin Password' -- reset_admin_password")
		}
	}	
	
	copy(tofile: sandboxDir.absolutePath + "/conf/wrapper.conf", file: jswLoc.absolutePath + "/customization/wrapper.conf") {
		filterset(refid: "appFilterSet")
	}	
}		