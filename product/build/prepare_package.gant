target(default:"prepare to package the product") {
	File buildDir = new File("${buildDirectory}")
	File sandboxDir = new File(buildDir, "sandbox")
	
	echo(file: new File(sandboxDir, "version.txt"), message: "${productVersion}")
	
	File jswLoc = new File(buildDir, "jsw")
	unzip(src: new File("${jswPath}/wrapper-delta-pack-st.zip"), dest: jswLoc, overwrite: true) {
	  regexpmapper(from: "^.*?/(.*)", to:"\\1")
	}
	
	File binDir = new File(sandboxDir, "bin")
	File bootDir = new File(sandboxDir, "boot")			
	copy(todir: bootDir) {
		fileset(dir: jswLoc.absolutePath + "/bin", includes: "wrapper-*")
		fileset(dir: jswLoc.absolutePath + "/lib", includes: "libwrapper-*, *.dll, wrapper.jar")
	}
	
	filterset(id: "appFilterSet") {
		filter(token: "app.name", value: "turbodev")
		filter(token: "app.long.name", value: "TurboDev")
		filter(token: "app.description", value: "TurboDev")
		filter(token: "app.class", value: "${bootstrapClass}")
	}
	filterset(id: "batchCommandCommonFilterSet") {
		filter(token: "set_fixed_command", value: "set _FIXED_COMMAND=console")
	}
	filterset(id: "shellScriptCommonFilterSet") {
		filter(token: "set_fixed_command", value: "FIXED_COMMAND=console")
		filter(token: "set_pass_through", value: "PASS_THROUGH=true")
	}
	
	copy(tofile: binDir.absolutePath + "/server.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset() {
			filter(token: "set_fixed_command", value: "")
			filter(token: "properties_and_parameters", value: "wrapper.pidfile=../status/turbodev.pid")
		}
	}
	copy(tofile: binDir.absolutePath + "/restore.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"TurboDev Restore\" wrapper.pidfile=turbodev_restore.pid wrapper.name=turbodev_restore wrapper.displayname=\"TurboDev Restore\" wrapper.description=\"TurboDev Restore\" -- restore")
		}
	}
	copy(tofile: binDir.absolutePath + "/backup.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"TurboDev Backup\" wrapper.pidfile=turbodev_backup.pid wrapper.name=turbodev_backup wrapper.displayname=\"TurboDev Backup\" wrapper.description=\"TurboDev Backup\" -- backup")
		}
	}
	copy(tofile: binDir.absolutePath + "/upgrade.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"TurboDev Upgrade\" wrapper.pidfile=turbodev_upgrade.pid wrapper.name=turbodev_upgrade wrapper.displayname=\"TurboDev Upgrade\" wrapper.description=\"TurboDev Upgrade\" -- upgrade")
		}
	}
	copy(tofile: binDir.absolutePath + "/apply_db_constraints.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"TurboDev Apply DB Constraints\" wrapper.pidfile=turbodev_apply_db_constraints.pid wrapper.name=turbodev_apply_db_constraints wrapper.displayname=\"TurboDev Apply DB Constraints\" wrapper.description=\"TurboDev Apply DB Constraints\" -- apply_db_constraints")
		}
	}
	copy(tofile: binDir.absolutePath + "/reset_admin_password.bat", file: "${jswPath}/AppCommand.bat.in") {
		filterset(refid: "batchCommandCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title=\"TurboDev Reset Admin Password\" wrapper.pidfile=turbodev_reset_admin_password.pid wrapper.name=turbodev_reset_admin_password wrapper.displayname=\"TurboDev Reset Admin Password\" wrapper.description=\"TurboDev Reset Admin Password\" -- reset_admin_password")
		}
	}
	
	copy(tofile: binDir.absolutePath + "/server.sh", file: "${jswPath}/sh.script.in") {
		filterset(refid: "appFilterSet")
		filterset() {
			filter(token: "set_fixed_command", value: "")
			filter(token: "set_pass_through", value: "")
			filter(token: "properties_and_parameters", value: "--")
		}
	}	
	copy(tofile: binDir.absolutePath + "/restore.sh", file: "${jswPath}/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "turbodev_restore")
			filter(token: "app.long.name", value: "TurboDev Restore")
			filter(token: "app.description", value: "TurboDev Restore")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='TurboDev Restore' wrapper.name=turbodev_restore wrapper.displayname='TurboDev Restore' wrapper.description='TurboDev Restore' -- restore")
		}
	}	
	copy(tofile: binDir.absolutePath + "/backup.sh", file: "${jswPath}/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "turbodev_backup")
			filter(token: "app.long.name", value: "TurboDev Backup")
			filter(token: "app.description", value: "TurboDev Backup")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='TurboDev Backup' wrapper.name=turbodev_backup wrapper.displayname='TurboDev Backup' wrapper.description='TurboDev Backup' -- backup")
		}
	}	
	copy(tofile: binDir.absolutePath + "/upgrade.sh", file: "${jswPath}/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "turbodev_upgrade")
			filter(token: "app.long.name", value: "TurboDev Upgrade")
			filter(token: "app.description", value: "TurboDev Upgrade")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='TurboDev Upgrade' wrapper.name=turbodev_upgrade wrapper.displayname='TurboDev Upgrade' wrapper.description='TurboDev Upgrade' -- upgrade")
		}
	}	
	copy(tofile: binDir.absolutePath + "/apply_db_constraints.sh", file: "${jswPath}/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "turbodev_apply_db_constraints")
			filter(token: "app.long.name", value: "TurboDev Apply DB Constraints")
			filter(token: "app.description", value: "TurboDev Apply DB Constraints")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='TurboDev Apply DB Constraints' wrapper.name=turbodev_apply_db_constraints wrapper.displayname='TurboDev Apply DB Constraints' wrapper.description='TurboDev Apply DB Constraints' -- apply_db_constraints")
		}
	}	
	copy(tofile: binDir.absolutePath + "/reset_admin_password.sh", file: "${jswPath}/sh.script.in") {
		filterset() {
			filter(token: "app.name", value: "turbodev_reset_admin_password")
			filter(token: "app.long.name", value: "TurboDev Reset Admin Password")
			filter(token: "app.description", value: "TurboDev Reset Admin Password")
			filter(token: "app.class", value: "${bootstrapClass}")
		}
		filterset(refid: "shellScriptCommonFilterSet")
		filterset() {
			filter(token: "properties_and_parameters", value: "wrapper.logfile.loglevel=NONE wrapper.console.title='TurboDev Reset Admin Password' wrapper.name=turbodev_reset_admin_password wrapper.displayname='TurboDev Reset Admin Password' wrapper.description='TurboDev Reset Admin Password' -- reset_admin_password")
		}
	}	
	
	copy(tofile: sandboxDir.absolutePath + "/conf/wrapper.conf", file: "${jswPath}/wrapper.conf") {
		filterset(refid: "appFilterSet")
	}	
}		